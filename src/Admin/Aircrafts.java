/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Admin;

import Public.Connect;
import java.sql.SQLException;
import java.sql.ResultSet;
import javax.swing.JOptionPane;

/**
 *
 * @author sqmson
 */
public class Aircrafts extends javax.swing.JFrame {
    
    private static final java.util.logging.Logger logger = java.util.logging.Logger.getLogger(Aircrafts.class.getName());
    Connect con = new Connect();
    private int selectedAircraftID = -1;
    /**
     * Creates new form Aircrafts
     */
    public Aircrafts() {
        initComponents();
        loadAirlines();
        loadAircrafts();
    }

    private void loadAirlines() {
       try {
            con.pst = con.con.prepareStatement("SELECT Name FROM airlines ORDER BY Name");
            con.rs = con.pst.executeQuery();
            cmbAirlines.removeAllItems();
            cmbAirlines.addItem("SELECT AIRLINE");
            while (con.rs.next()) {
                cmbAirlines.addItem(con.rs.getString("Name"));
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Error loading airlines: " + e.getMessage());
        }
    }
    private void loadAircrafts() {
        try {
            con.pst = con.con.prepareStatement(
                    "SELECT a.AircraftID, a.Model, a.Capacity, al.Name AS AirlineName " +
                    "FROM aircrafts a " +
                    "JOIN airlines al ON a.Airline = al.AirlineID", ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY);

            con.rs = con.pst.executeQuery();

            if (con.rs.next()) {
                showCurrentRecord();
            } else {
                JOptionPane.showMessageDialog(this, "No aircrafts found.");
            }

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Error loading aircrafts: " + e.getMessage());
        }
    }
    private void showCurrentRecord() {
        try {
            selectedAircraftID = con.rs.getInt("AircraftID");
            txtModel.setText(con.rs.getString("Model"));
            txtCapacity.setText(String.valueOf(con.rs.getInt("Capacity")));

            // Select correct airline in combo
            String airlineName = con.rs.getString("AirlineName");
            cmbAirlines.setSelectedItem(airlineName);

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Error showing record: " + e.getMessage());
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtModel = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtCapacity = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        btnAdd = new javax.swing.JButton();
        btnNext = new javax.swing.JButton();
        btnFirst = new javax.swing.JButton();
        btnPrevious = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnLast = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        cmbAirlines = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Aircrafts");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel2.setText("Model");

        txtModel.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel3.setText("Capacity");

        txtCapacity.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel4.setText("Airline");

        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnNext.setText("Next");
        btnNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextActionPerformed(evt);
            }
        });

        btnFirst.setText("First");
        btnFirst.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFirstActionPerformed(evt);
            }
        });

        btnPrevious.setText("Previous");
        btnPrevious.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPreviousActionPerformed(evt);
            }
        });

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnLast.setText("Last");
        btnLast.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLastActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        cmbAirlines.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        cmbAirlines.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(51, 51, 51)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnFirst)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(btnNext)
                                        .addGap(18, 18, 18)
                                        .addComponent(btnPrevious))
                                    .addComponent(btnAdd))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(btnLast)
                                    .addComponent(btnUpdate))
                                .addGap(18, 18, 18)
                                .addComponent(btnDelete))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(txtCapacity, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 313, Short.MAX_VALUE)
                                    .addComponent(txtModel)
                                    .addComponent(cmbAirlines, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addGap(0, 48, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtModel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCapacity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(cmbAirlines, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdd)
                    .addComponent(btnUpdate))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnPrevious)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnFirst)
                        .addComponent(btnNext)
                        .addComponent(btnLast)
                        .addComponent(btnDelete)))
                .addGap(55, 55, 55))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
        String model = txtModel.getText().trim();
        String capacityStr = txtCapacity.getText().trim();
        String selectedName = (String) cmbAirlines.getSelectedItem();

        if (model.isEmpty() || capacityStr.isEmpty() || selectedName == null || selectedName.equals("SELECT AIRLINE")) {
            JOptionPane.showMessageDialog(this, "Please fill all fields and select an airline.");
            return;
        }

        int capacity;
        try {
            capacity = Integer.parseInt(capacityStr);
            if (capacity <= 0) throw new NumberFormatException("capacity <= 0");
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(this, "Capacity must be a positive integer.");
            return;
        }

        try {
            // Query to get the AirlineID for the selected name
            con.pst = con.con.prepareStatement("SELECT AirlineID FROM airlines WHERE Name = ? LIMIT 1");
            con.pst.setString(1, selectedName);
            con.rs = con.pst.executeQuery();

            if (!con.rs.next()) {
                JOptionPane.showMessageDialog(this, "Selected airline not found in database.");
                return;
            }

            int airlineID = con.rs.getInt("AirlineID");

            // Insert new aircraft
            String sql = "INSERT INTO aircrafts (Model, Capacity, Airline) VALUES (?, ?, ?)";
            con.pst = con.con.prepareStatement(sql);
            con.pst.setString(1, model);
            con.pst.setInt(2, capacity);
            con.pst.setInt(3, airlineID);

            int rows = con.pst.executeUpdate();
            if (rows > 0) {
                JOptionPane.showMessageDialog(this, "Aircraft added successfully!");
                txtModel.setText("");
                txtCapacity.setText("");
            } else {
                JOptionPane.showMessageDialog(this, "Insert failed. No rows affected.");
            }

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Database error: " + ex.getMessage());
        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnFirstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFirstActionPerformed
        // TODO add your handling code here:
        try {
            if (con.rs.first()) {
                showCurrentRecord();
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
        }
    }//GEN-LAST:event_btnFirstActionPerformed

    private void btnNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextActionPerformed
        // TODO add your handling code here:
        try {
            if (!con.rs.isLast() && con.rs.next()) {
                showCurrentRecord();
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
        }
    }//GEN-LAST:event_btnNextActionPerformed

    private void btnPreviousActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPreviousActionPerformed
        // TODO add your handling code here:
        try {
            if (!con.rs.isFirst() && con.rs.previous()) {
                showCurrentRecord();
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
        }
    }//GEN-LAST:event_btnPreviousActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here
        try {
            if (selectedAircraftID == -1) {
                JOptionPane.showMessageDialog(this, "No aircraft selected for update.");
                return;
            }

            String model = txtModel.getText().trim();
            String capacityStr = txtCapacity.getText().trim();
            String selectedName = (String) cmbAirlines.getSelectedItem();

            // Start building update query
            StringBuilder sql = new StringBuilder("UPDATE aircrafts SET ");
            java.util.List<Object> params = new java.util.ArrayList<>();

            if (!model.isEmpty()) {
                sql.append("Model = ?, ");
                params.add(model);
            }

            if (!capacityStr.isEmpty()) {
                try {
                    int capacity = Integer.parseInt(capacityStr);
                    if (capacity <= 0) throw new NumberFormatException();
                    sql.append("Capacity = ?, ");
                    params.add(capacity);
                } catch (NumberFormatException e) {
                    JOptionPane.showMessageDialog(this, "Capacity must be a positive integer.");
                    return;
                }
            }

            if (selectedName != null && !selectedName.equals("SELECT AIRLINE")) {
                con.pst = con.con.prepareStatement("SELECT AirlineID FROM airlines WHERE Name = ? LIMIT 1");
                con.pst.setString(1, selectedName);
                con.rs = con.pst.executeQuery();
                if (con.rs.next()) {
                    int airlineID = con.rs.getInt("AirlineID");
                    sql.append("Airline = ?, ");
                    params.add(airlineID);
                } else {
                    JOptionPane.showMessageDialog(this, "Selected airline not found.");
                    return;
                }
            }

            // If nothing to update
            if (params.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Please provide at least one field to update.");
                return;
            }

            // Remove last comma and space
            sql.setLength(sql.length() - 2);

            // Add WHERE
            sql.append(" WHERE AircraftID = ?");
            params.add(selectedAircraftID);

            // Prepare statement
            con.pst = con.con.prepareStatement(sql.toString());

            // Bind parameters
            for (int i = 0; i < params.size(); i++) {
                con.pst.setObject(i + 1, params.get(i));
            }

            int rows = con.pst.executeUpdate();
            if (rows > 0) {
                JOptionPane.showMessageDialog(this, "Aircraft updated successfully!");
            } else {
                JOptionPane.showMessageDialog(this, "No changes were made.");
            }

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Error updating record: " + ex.getMessage());
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnLastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLastActionPerformed
        // TODO add your handling code here:
        try {
            if (con.rs.last()) {
                showCurrentRecord();
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
        }
    }//GEN-LAST:event_btnLastActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnDeleteActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ReflectiveOperationException | javax.swing.UnsupportedLookAndFeelException ex) {
            logger.log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> new Aircrafts().setVisible(true));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnFirst;
    private javax.swing.JButton btnLast;
    private javax.swing.JButton btnNext;
    private javax.swing.JButton btnPrevious;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JComboBox<String> cmbAirlines;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JTextField txtCapacity;
    private javax.swing.JTextField txtModel;
    // End of variables declaration//GEN-END:variables
}
