package Admin;
/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
import Public.Connect;
import Passengers.MenuFrame;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
/**
 *
 * @author Alfie
 */
public class FlightsFrame extends javax.swing.JFrame {
    String query;
    ResultSet rs;
    Connect con;

    /**
     * Creates new form Flights
     */
    public FlightsFrame() {
        try{
            con = new Connect();
            rs = con.st.executeQuery("select * from flights");
        } catch (SQLException e){
            e.printStackTrace();
        }
       
        initComponents();
        setTitle("Flight Management");
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblFlightID = new javax.swing.JLabel();
        lblFlightNumber = new javax.swing.JLabel();
        lblAirportID = new javax.swing.JLabel();
        lblDeparture = new javax.swing.JLabel();
        lblArrival = new javax.swing.JLabel();
        lblStatus = new javax.swing.JLabel();
        lblAircraftID = new javax.swing.JLabel();
        btnSave = new javax.swing.JButton();
        btnFind = new javax.swing.JButton();
        txtFlightID = new javax.swing.JTextField();
        txtFlightNumber = new javax.swing.JTextField();
        txtAirportID = new javax.swing.JTextField();
        txtDeparture = new javax.swing.JTextField();
        txtArrival = new javax.swing.JTextField();
        txtStatus = new javax.swing.JTextField();
        txtAircraftID = new javax.swing.JTextField();
        btnFirst = new javax.swing.JButton();
        btnLast = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnHome = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblFlightID.setText("FlightID");

        lblFlightNumber.setText("Flight No.");

        lblAirportID.setText("AirportID");

        lblDeparture.setText("DepartureTime");

        lblArrival.setText("ArrivalTime");

        lblStatus.setText("Status");

        lblAircraftID.setText("AircraftID");

        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnFind.setText("Find");
        btnFind.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFindActionPerformed(evt);
            }
        });

        btnFirst.setText("First");
        btnFirst.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFirstActionPerformed(evt);
            }
        });

        btnLast.setText("Last");
        btnLast.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLastActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnHome.setText("Home");
        btnHome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHomeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnSave)
                        .addGap(18, 18, 18)
                        .addComponent(btnFind)
                        .addGap(18, 18, 18)
                        .addComponent(btnFirst)
                        .addGap(18, 18, 18)
                        .addComponent(btnLast)
                        .addGap(18, 18, 18)
                        .addComponent(btnDelete))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblArrival)
                                    .addComponent(lblStatus)
                                    .addComponent(lblAircraftID)
                                    .addComponent(lblDeparture))
                                .addGap(21, 21, 21)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(txtStatus, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 292, Short.MAX_VALUE)
                                    .addComponent(txtArrival, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtDeparture)
                                    .addComponent(txtAircraftID)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblAirportID)
                                    .addComponent(lblFlightNumber)
                                    .addComponent(lblFlightID))
                                .addGap(48, 48, 48)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(txtFlightNumber, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 292, Short.MAX_VALUE)
                                    .addComponent(txtFlightID, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtAirportID)))))
                    .addComponent(btnHome))
                .addContainerGap(31, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnHome)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtFlightID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblFlightID))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblFlightNumber)
                    .addComponent(txtFlightNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAirportID)
                    .addComponent(txtAirportID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDeparture)
                    .addComponent(txtDeparture, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblArrival)
                    .addComponent(txtArrival, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblStatus)
                    .addComponent(txtStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAircraftID)
                    .addComponent(txtAircraftID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSave)
                    .addComponent(btnFind)
                    .addComponent(btnFirst)
                    .addComponent(btnLast)
                    .addComponent(btnDelete))
                .addGap(14, 14, 14))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnFirstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFirstActionPerformed
        // TODO add your handling code here:
         try {
            if(rs.first()){
                txtFlightID.setText(""+rs.getInt(1));
                txtFlightNumber.setText(rs.getString(2));
                txtAirportID.setText(""+rs.getString(3));
                txtDeparture.setText(""+rs.getDate(4));
                txtArrival.setText(""+rs.getDate(5));
                txtStatus.setText(rs.getString(6));
                txtAircraftID.setText(""+rs.getInt(7));
            }
        } catch (SQLException ex){
            ex.printStackTrace();
        }
        
    }//GEN-LAST:event_btnFirstActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnHomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHomeActionPerformed
        // TODO add your handling code here:
        dispose();
        new MenuFrame().setVisible(true);
    }//GEN-LAST:event_btnHomeActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:
        int FlightID = Integer.parseInt(txtFlightID.getText());
        String FlightNumber =  txtFlightNumber.getText();
        int AirportID= Integer.parseInt(txtAirportID.getText());
        String inputDateTime = txtDeparture.getText().trim();
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern(" yyyy-MM-dd HH:mm:ss");
        LocalDateTime Departure = LocalDateTime.parse(inputDateTime,formatter);
        String inputDateTime1 = txtArrival.getText().trim();
        DateTimeFormatter formatter1 = DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss");
        LocalDateTime Arrival = LocalDateTime.parse(inputDateTime1,formatter1);
        String Status =txtStatus.getText();
        int AircraftID= Integer.parseInt(txtAircraftID.getText());
        


        query = "INSERT INTO flights VALUES ('"+FlightID+"','"+FlightNumber+"','"+AirportID+"','"+Departure+"','"+Arrival+"','"+Status+"'"+AircraftID+"')";
        
        try{
            con.st.executeUpdate(query);
            JOptionPane.showMessageDialog(this, "Saved Succesfully");
        } catch (SQLException ex){
            ex.printStackTrace();
        }

    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnFindActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFindActionPerformed
        // TODO add your handling code here:
        int FlightID= Integer.parseInt(txtFlightID.getText());
        try {
            query = "SELECT * FROM flights WHERE FlightID ='"+FlightID+"'";
                rs = con.st.executeQuery(query);
            if(rs.first()){
                txtFlightID.setText(""+rs.getInt(1));
                txtFlightNumber.setText(rs.getString(2));
                txtAirportID.setText(""+rs.getString(3));
                txtDeparture.setText(""+rs.getDate(4));
                txtArrival.setText(""+rs.getDate(5));
                txtStatus.setText(rs.getString(6));
                txtAircraftID.setText(""+rs.getInt(7));
                
                
            }
            else {
                JOptionPane.showMessageDialog(null,"Record not Found");
                txtFlightID.setText("");
                txtFlightID.requestFocus();
            }
        } catch (SQLException ex){
            ex.printStackTrace();
        }

    }//GEN-LAST:event_btnFindActionPerformed

    private void btnLastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLastActionPerformed
        // TODO add your handling code here:
        try {
            if(rs.last()){
                txtFlightID.setText(""+rs.getInt(1));
                txtFlightNumber.setText(rs.getString(2));
                txtAirportID.setText(""+rs.getString(3));
                txtDeparture.setText(""+rs.getDate(4));
                txtArrival.setText(""+rs.getDate(5));
                txtStatus.setText(rs.getString(6));
                txtAircraftID.setText(""+rs.getInt(7));     
            }
        } catch (SQLException ex){
            ex.printStackTrace();
        }

    }//GEN-LAST:event_btnLastActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FlightsFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FlightsFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FlightsFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FlightsFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FlightsFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnFind;
    private javax.swing.JButton btnFirst;
    private javax.swing.JButton btnHome;
    private javax.swing.JButton btnLast;
    private javax.swing.JButton btnSave;
    private javax.swing.JLabel lblAircraftID;
    private javax.swing.JLabel lblAirportID;
    private javax.swing.JLabel lblArrival;
    private javax.swing.JLabel lblDeparture;
    private javax.swing.JLabel lblFlightID;
    private javax.swing.JLabel lblFlightNumber;
    private javax.swing.JLabel lblStatus;
    private javax.swing.JTextField txtAircraftID;
    private javax.swing.JTextField txtAirportID;
    private javax.swing.JTextField txtArrival;
    private javax.swing.JTextField txtDeparture;
    private javax.swing.JTextField txtFlightID;
    private javax.swing.JTextField txtFlightNumber;
    private javax.swing.JTextField txtStatus;
    // End of variables declaration//GEN-END:variables
}
